<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Gemstone.Communication</name>
  </assembly>
  <members>
    <member name="T:Gemstone.Communication.ClientBase">
      <summary>
            Base class for a client involved in server-client communication.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.#ctor">
      <summary>
            Initializes a new instance of the client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.#ctor(Gemstone.Communication.TransportProtocol,System.String)">
      <summary>
            Initializes a new instance of the client.
            </summary>
      <param name="transportProtocol">One of the <see cref="P:Gemstone.Communication.ClientBase.TransportProtocol" /> values.</param>
      <param name="connectionString">The data used by the client for connection to a server.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Connect">
      <summary>
            Connects the client to the server synchronously.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.ConnectAsync">
      <summary>
            Connects the client to the server asynchronously.
            </summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
      <exception cref="T:System.FormatException">Server property in <see cref="P:Gemstone.Communication.ClientBase.ConnectionString" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">Attempt is made to connect the client when it is not disconnected.</exception>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.ConnectionAttempt">
      <summary>
            Occurs when client is attempting connection to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.ConnectionEstablished">
      <summary>
            Occurs when client connection to the server is established.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.ConnectionException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered during connection attempt to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.ConnectionString">
      <summary>
            Gets or sets the data required by the client to connect to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.ConnectionTerminated">
      <summary>
            Occurs when client connection to the server is terminated.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.ConnectionTime">
      <summary>
            Gets the <see cref="T:Gemstone.Units.Time" /> for which the client has been connected to the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Create(System.String)">
      <summary>
            Create a communications client
            </summary>
      <param name="connectionString">Connection string for the client.</param>
      <returns>A communications client.</returns>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.CurrentState">
      <summary>
            Gets the current <see cref="T:Gemstone.Communication.ClientState" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientBase.DefaultMaxConnectionAttempts">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.MaxConnectionAttempts" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientBase.DefaultReceiveBufferSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.ReceiveBufferSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientBase.DefaultSendBufferSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.SendBufferSize" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Disconnect">
      <summary>
            When overridden in a derived class, disconnects client from the server synchronously.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Dispose">
      <summary>
            Releases all the resources used by the <see cref="T:Gemstone.Communication.ClientBase" /> object.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:Gemstone.Communication.ClientBase" /> object and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.Disposed">
      <summary>
            Occurs when the <see cref="T:Gemstone.Communication.ClientBase" /> has been disposed.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.Enabled">
      <summary>
            Gets or sets a boolean value that indicates whether the client is currently enabled.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Initialize">
      <summary>
            Initializes the client.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.IsDisposed">
      <summary>
            Gets a flag that indicates whether the object has been disposed.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.MaxConnectionAttempts">
      <summary>
            Gets or sets the maximum number of times the client will attempt to connect to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.Name">
      <summary>
            Gets or sets the unique identifier of the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnConnectionAttempt">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionAttempt" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnConnectionEstablished">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionEstablished" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnConnectionException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnConnectionTerminated">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionTerminated" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnReceiveData(System.Int32)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveData" /> event.
            </summary>
      <param name="size">Number of bytes received from the client.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnReceiveDataComplete(System.Byte[],System.Int32)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataComplete" /> event.
            </summary>
      <param name="data">Data received from the client.</param>
      <param name="size">Number of bytes received from the client.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnReceiveDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnSendDataComplete">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.SendDataComplete" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnSendDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.OnSendDataStart">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.SendDataStart" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.ReadIndex">
      <summary>
            Gets or sets current read index for received data buffer incremented at each <see cref="M:Gemstone.Communication.ClientBase.Read(System.Byte[],System.Int32,System.Int32)" /> call.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.ReceiveBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the client for receiving data from the server.
            </summary>
      <exception cref="T:System.ArgumentException">The value being assigned is either zero or negative.</exception>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.ReceiveData">
      <summary>
            Occurs when unprocessed data has been received from the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.ReceiveDataComplete">
      <summary>
            Occurs when data received from the server has been processed and is ready for consumption.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.ReceiveDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when receiving data from the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Send(System.Byte[])">
      <summary>
            Sends data to the server synchronously.
            </summary>
      <param name="data">The binary data that is to be sent.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Send(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the server synchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.Send(System.String)">
      <summary>
            Sends data to the server synchronously.
            </summary>
      <param name="data">The plain-text data that is to be sent.</param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.SendAsync(System.Byte[])">
      <summary>
            Sends data to the server asynchronously.
            </summary>
      <param name="data">The binary data that is to be sent.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.SendAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the server asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.SendAsync(System.String)">
      <summary>
            Sends data to the server asynchronously.
            </summary>
      <param name="data">The plain-text data that is to be sent.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.SendBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the client for sending data to the server.
            </summary>
      <exception cref="T:System.ArgumentException">The value being assigned is either zero or negative.</exception>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.SendDataAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, sends data to the server asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.SendDataComplete">
      <summary>
            Occurs when the client has successfully sent data to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.SendDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when sending data to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ClientBase.SendDataStart">
      <summary>
            Occurs when the client begins sending data to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.ServerUri">
      <summary>
            Gets the server URI.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.Statistics">
      <summary>
            Gets the <see cref="T:Gemstone.Communication.TransportStatistics" /> for the client connection.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.Status">
      <summary>
            Gets the descriptive status of the client.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.TextEncoding">
      <summary>
            Gets or sets the <see cref="T:System.Text.Encoding" /> to be used for the text sent to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.TrackStatistics">
      <summary>
            Determines whether the base class should track statistics.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ClientBase.TransportProtocol">
      <summary>
            Gets the <see cref="P:Gemstone.Communication.ClientBase.TransportProtocol" /> used by the client for the transportation of data with the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.UpdateBytesReceived(System.Int32)">
      <summary>
            Updates the <see cref="P:Gemstone.Communication.ClientBase.Statistics" /> pertaining to bytes received.
            </summary>
      <param name="bytes"></param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.UpdateBytesSent(System.Int32)">
      <summary>
            Updates the <see cref="P:Gemstone.Communication.ClientBase.Statistics" /> pertaining to bytes sent.
            </summary>
      <param name="bytes"></param>
    </member>
    <member name="M:Gemstone.Communication.ClientBase.ValidateConnectionString(System.String)">
      <summary>
            When overridden in a derived class, validates the specified <paramref name="connectionString" />.
            </summary>
      <param name="connectionString">The connection string to be validated.</param>
    </member>
    <member name="T:Gemstone.Communication.ClientIdentificationMode">
      <summary>
            Defines modes by which the UDP server will identify its clients when receiving messages.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientIdentificationMode.IP">
      <summary>
            Identify clients by their IP address.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientIdentificationMode.Port">
      <summary>
            Identify clients by the port they are bound to.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientIdentificationMode.EndPoint">
      <summary>
            Identify clients by both their IP address and the port they are bound to.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.ClientState">
      <summary>
            Indicates the current state of the client.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientState.Connecting">
      <summary>
            Client is establishing connection.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientState.Connected">
      <summary>
            Client has established connection.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ClientState.Disconnected">
      <summary>
            Client connection is terminated.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.FileClient">
      <summary>
            Represents a communication client based on <see cref="T:System.IO.FileStream" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.FileClient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.FileClient" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.FileClient.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.FileClient" /> class.
            </summary>
      <param name="connectString">Connect string of the <see cref="T:Gemstone.Communication.FileClient" />. See <see cref="F:Gemstone.Communication.FileClient.DefaultConnectionString" /> for format.</param>
    </member>
    <member name="P:Gemstone.Communication.FileClient.AutoRepeat">
      <summary>
            Gets or sets a boolean value that indicates whether receiving (reading) of data is to be repeated endlessly.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:Gemstone.Communication.FileClient.AutoRepeat" /> is enabled when <see cref="P:Gemstone.Communication.FileClient.FileAccessMode" /> is <see cref="F:System.IO.FileAccess.ReadWrite" /></exception>
    </member>
    <member name="P:Gemstone.Communication.FileClient.Client">
      <summary>
            Gets the <see cref="T:System.IO.FileStream" /> object for the <see cref="T:Gemstone.Communication.FileClient" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.FileClient.ConnectAsync">
      <summary>
            Connects the <see cref="T:Gemstone.Communication.FileClient" /> to the <see cref="T:System.IO.FileStream" /> asynchronously.
            </summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
      <exception cref="T:System.InvalidOperationException">Attempt is made to connect the <see cref="T:Gemstone.Communication.FileClient" /> when it is not disconnected.</exception>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultAutoRepeat">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.AutoRepeat" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultConnectionString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.ConnectionString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultDisconnectAtEOF">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.DisconnectAtEOF" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultFileAccessMode">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.FileAccessMode" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultFileOpenMode">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.FileOpenMode" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultFileShareMode">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.FileShareMode" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultReceiveInterval">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.ReceiveInterval" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultReceiveOnDemand">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.ReceiveOnDemand" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.FileClient.DefaultStartingOffset">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.FileClient.StartingOffset" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.FileClient.Disconnect">
      <summary>
            Disconnects the <see cref="T:Gemstone.Communication.FileClient" /> from the <see cref="T:System.IO.FileStream" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.FileClient.DisconnectAtEOF">
      <summary>
            Gets or sets flag that determines if client should disconnect when end of file has been reached.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.FileClient.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:Gemstone.Communication.FileClient" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Gemstone.Communication.FileClient.FileAccessMode">
      <summary>
            Gets or sets the <see cref="T:System.IO.FileAccess" /> value to be used when opening the file.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:Gemstone.Communication.FileClient.FileAccessMode" /> is set to <see cref="F:System.IO.FileAccess.ReadWrite" /> when <see cref="P:Gemstone.Communication.FileClient.AutoRepeat" /> is enabled.</exception>
    </member>
    <member name="P:Gemstone.Communication.FileClient.FileOpenMode">
      <summary>
            Gets or sets the <see cref="T:System.IO.FileMode" /> value to be used when opening the file.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.FileClient.FileShareMode">
      <summary>
            Gets or set the <see cref="T:System.IO.FileShare" /> value to be used when opening the file.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.FileClient.OnConnectionException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.FileClient.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
      <exception cref="T:System.InvalidOperationException">No received data buffer has been defined to read.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <paramref name="length" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="M:Gemstone.Communication.FileClient.ReadNextBuffer">
      <summary>
            Reads next data buffer from the <see cref="T:System.IO.FileStream" />.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Gemstone.Communication.FileClient.ReadNextBuffer" /> is called when <see cref="T:Gemstone.Communication.FileClient" /> is not connected.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:Gemstone.Communication.FileClient.ReadNextBuffer" /> is called when <see cref="P:Gemstone.Communication.FileClient.ReceiveOnDemand" /> is disabled.</exception>
    </member>
    <member name="P:Gemstone.Communication.FileClient.ReceiveInterval">
      <summary>
            Gets or sets the number of milliseconds to pause before receiving (reading) the next available set of data.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.FileClient.ReceiveOnDemand">
      <summary>
            Gets or sets a boolean value that indicates whether receiving (reading) of data will be initiated manually by calling <see cref="M:Gemstone.Communication.FileClient.ReadNextBuffer" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.FileClient.SendDataAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends (writes) data to the file asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent (written).</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending (writing) data.</param>
      <param name="length">The number of bytes to be sent (written) from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.FileClient.ServerUri">
      <summary>
            Gets the server URI of the <see cref="T:Gemstone.Communication.FileClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.FileClient.StartingOffset">
      <summary>
            Gets or sets the starting point relative to the beginning of the file from where the data is to be received (read).
            </summary>
      <exception cref="T:System.ArgumentException">The value being assigned is not a positive number.</exception>
    </member>
    <member name="M:Gemstone.Communication.FileClient.ValidateConnectionString(System.String)">
      <summary>
            Validates the specified <paramref name="connectionString" />.
            </summary>
      <param name="connectionString">Connection string to be validated.</param>
      <exception cref="T:System.ArgumentException">File property is missing.</exception>
    </member>
    <member name="T:Gemstone.Communication.IClient">
      <summary>
            Defines a client involved in server-client communication.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IClient.Connect">
      <summary>
            Connects client to the server synchronously.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IClient.ConnectAsync">
      <summary>
            Connects client to the server asynchronously.
            </summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="E:Gemstone.Communication.IClient.ConnectionAttempt">
      <summary>
            Occurs when client is attempting connection to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.ConnectionEstablished">
      <summary>
            Occurs when client connection to the server is established.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.ConnectionException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered during connection attempt to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.ConnectionString">
      <summary>
            Gets or sets the data required by the client to connect to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.ConnectionTerminated">
      <summary>
            Occurs when client connection to the server is terminated.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.ConnectionTime">
      <summary>
            Gets the <see cref="T:Gemstone.Units.Time" /> for which the client has been connected to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.CurrentState">
      <summary>
            Gets the current <see cref="T:Gemstone.Communication.ClientState" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IClient.Disconnect">
      <summary>
            Disconnects client from the server synchronously.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.MaxConnectionAttempts">
      <summary>
            Gets or sets the maximum number of times the client will attempt to connect to the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IClient.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
    </member>
    <member name="P:Gemstone.Communication.IClient.ReceiveBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the client for receiving data from the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.ReceiveData">
      <summary>
            Occurs when unprocessed data has been received from the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.ReceiveDataComplete">
      <summary>
            Occurs when data received from the server has been processed and is ready for consumption.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.ReceiveDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when receiving data from the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IClient.Send(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the server synchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
    </member>
    <member name="M:Gemstone.Communication.IClient.SendAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the server asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.IClient.SendBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the client for receiving data from the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.SendDataComplete">
      <summary>
            Occurs when the client has successfully sent data to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.SendDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when sending data to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IClient.SendDataStart">
      <summary>
            Occurs when the client begins sending data to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.ServerUri">
      <summary>
            Gets the server URI.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.Statistics">
      <summary>
            Gets the <see cref="T:Gemstone.Communication.TransportStatistics" /> for the client connection.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.TextEncoding">
      <summary>
            Gets or sets the <see cref="T:System.Text.Encoding" /> to be used for the text sent to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IClient.TransportProtocol">
      <summary>
            Gets the <see cref="P:Gemstone.Communication.IClient.TransportProtocol" /> used by the client for the transportation of data with the server.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.IPStack">
      <summary>
            IP stack enumeration.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.IPStack.IPv6">
      <summary>
            IPv6 stack.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.IPStack.IPv4">
      <summary>
            IPv4 stack.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.IPStack.Default">
      <summary>
            Default stack.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.IServer">
      <summary>
            Defines a server involved in server-client communication.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ClientConnected">
      <summary>
            Occurs when a client connects to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ClientConnectingException">
      <summary>
            Occurs when an exception is encountered while a client is connecting.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ClientDisconnected">
      <summary>
            Occurs when a client disconnects from the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IServer.ClientIDs">
      <summary>
            Gets the IDs of clients connected to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IServer.ConfigurationString">
      <summary>
            Gets or sets the data required by the server to initialize.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IServer.CurrentState">
      <summary>
            Gets the current <see cref="T:Gemstone.Communication.ServerState" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IServer.DisconnectAll">
      <summary>
            Disconnects all of the connected clients.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IServer.DisconnectOne(System.Guid)">
      <summary>
            Disconnects a connected client.
            </summary>
      <param name="clientID">ID of the client to be disconnected.</param>
    </member>
    <member name="P:Gemstone.Communication.IServer.MaxClientConnections">
      <summary>
            Gets or sets the maximum number of clients that can connect to the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IServer.Multicast(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to all of the connected clients synchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
    </member>
    <member name="M:Gemstone.Communication.IServer.MulticastAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to all of the connected clients asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>Array of <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.IServer.Read(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="clientID">ID of the client from which data buffer should be read.</param>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
    </member>
    <member name="P:Gemstone.Communication.IServer.ReceiveBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the server for receiving data from the clients.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ReceiveClientData">
      <summary>
            Occurs when unprocessed data has been received from a client.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ReceiveClientDataComplete">
      <summary>
            Occurs when data received from a client has been processed and is ready for consumption.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ReceiveClientDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when receiving data from a client.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IServer.RunTime">
      <summary>
            Gets the <see cref="T:Gemstone.Units.Time" /> for which the server has been running.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IServer.SendBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the client for receiving data from the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.SendClientDataComplete">
      <summary>
            Occurs when data has been sent to a client.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.SendClientDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when sending data to a client.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.SendClientDataStart">
      <summary>
            Occurs when data is being sent to a client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IServer.SendTo(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the specified client synchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
    </member>
    <member name="M:Gemstone.Communication.IServer.SendToAsync(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.IServer.ServerID">
      <summary>
            Gets the server's ID.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ServerStarted">
      <summary>
            Occurs when the server is started.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.IServer.ServerStopped">
      <summary>
            Occurs when the server is stopped.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IServer.Start">
      <summary>
            Starts the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.IServer.Stop">
      <summary>
            Stops the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IServer.TextEncoding">
      <summary>
            Gets or sets the <see cref="T:System.Text.Encoding" /> to be used for the text sent to the connected clients.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.IServer.TransportProtocol">
      <summary>
            Gets the <see cref="P:Gemstone.Communication.IServer.TransportProtocol" /> used by the server for the transportation of data with the clients.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.Payload">
      <summary>
            A helper class containing methods for manipulation of payload.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Payload.AddHeader(System.Byte[]@,System.Int32@,System.Int32@,System.Byte[],Gemstone.EndianOrder)">
      <summary>
            Adds header containing the <paramref name="marker" /> to the payload in the <paramref name="buffer" /> for "Payload-Aware" transmission.
            </summary>
      <param name="buffer">The buffer containing the payload.</param>
      <param name="offset">The offset in the <paramref name="buffer" /> at which the payload starts.</param>
      <param name="length">The length of the payload in the <paramref name="buffer" /> starting at the <paramref name="offset" />.</param>
      <param name="marker">The byte sequence used to mark the beginning of the payload in a "Payload-Aware" transmissions.</param>
      <param name="endianOrder">The endian order to apply to payload size encoding.</param>
    </member>
    <member name="F:Gemstone.Communication.Payload.DefaultMarker">
      <summary>
            Default byte sequence used to mark the beginning of the payload in a "Payload-Aware" transmissions.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Payload.ExtractLength(System.Byte[],System.Int32,System.Byte[],Gemstone.EndianOrder)">
      <summary>
            Determines the length of a payload in a "Payload-Aware" transmission from the payload header information.
            </summary>
      <param name="buffer">The buffer containing payload header information starting at index zero.</param>
      <param name="length">The length of valid data within in <paramref name="buffer" />.</param>
      <param name="marker">The byte sequence used to mark the beginning of the payload in a "Payload-Aware" transmissions.</param>
      <param name="endianOrder">The endian order to apply to payload size decoding.</param>
      <returns>Length of the payload.</returns>
    </member>
    <member name="M:Gemstone.Communication.Payload.HasHeader(System.Byte[],System.Byte[])">
      <summary>
            Determines whether or not the <paramref name="buffer" /> contains the header information of a "Payload-Aware" transmission.
            </summary>
      <param name="buffer">The buffer to be checked at index zero.</param>
      <param name="marker">The byte sequence used to mark the beginning of the payload in a "Payload-Aware" transmissions.</param>
      <returns>true if the buffer contains "Payload-Aware" transmission header; otherwise false.</returns>
    </member>
    <member name="F:Gemstone.Communication.Payload.LengthSegment">
      <summary>
            Specifies the length of the segment in a "Payload-Aware" transmission that contains the payload length.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.SerialClient">
      <summary>
            Represents a communication client based on <see cref="T:System.IO.Ports.SerialPort" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.SerialClient" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.SerialClient" /> class.
            </summary>
      <param name="connectionString">Connect string of the <see cref="T:Gemstone.Communication.SerialClient" />. See <see cref="F:Gemstone.Communication.SerialClient.DefaultConnectionString" /> for format.</param>
    </member>
    <member name="P:Gemstone.Communication.SerialClient.Client">
      <summary>
            Gets the <see cref="T:System.IO.Ports.SerialPort" /> object for the <see cref="T:Gemstone.Communication.SerialClient" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.ConnectAsync">
      <summary>
            Connects the <see cref="T:Gemstone.Communication.SerialClient" /> to the <see cref="T:System.IO.Ports.SerialPort" /> asynchronously.
            </summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
      <exception cref="T:System.InvalidOperationException">Attempt is made to connect the <see cref="T:Gemstone.Communication.SerialClient" /> when it is connected.</exception>
    </member>
    <member name="F:Gemstone.Communication.SerialClient.DefaultConnectionString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.ConnectionString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.SerialClient.DefaultReceivedBytesThreshold">
      <summary>
            Default value for <see cref="P:Gemstone.Communication.SerialClient.ReceivedBytesThreshold" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.Disconnect">
      <summary>
            Disconnects the <see cref="T:Gemstone.Communication.SerialClient" /> from the <see cref="T:System.IO.Ports.SerialPort" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:Gemstone.Communication.SerialClient" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.OnConnectionException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
      <exception cref="T:System.InvalidOperationException">No received data buffer has been defined to read.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <paramref name="length" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="P:Gemstone.Communication.SerialClient.ReceivedBytesThreshold">
      <summary>
            Gets or sets the needed number of bytes in the internal input buffer before a <see cref="M:Gemstone.Communication.ClientBase.OnReceiveDataComplete(System.Byte[],System.Int32)" /> event occurs.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.SendDataAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends (writes) data to the <see cref="T:System.IO.Ports.SerialPort" /> asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent (written).</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending (writing) data.</param>
      <param name="length">The number of bytes to be sent (written) from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.SerialClient.ServerUri">
      <summary>
            Gets the server URI of the <see cref="T:Gemstone.Communication.SerialClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.SerialClient.Status">
      <summary>
            Gets the descriptive status of the <see cref="T:Gemstone.Communication.SerialClient" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialClient.ValidateConnectionString(System.String)">
      <summary>
            Validates the specified <paramref name="connectionString" />.
            </summary>
      <param name="connectionString">Connection string to be validated.</param>
      <exception cref="T:System.ArgumentException">Port property is missing.</exception>
      <exception cref="T:System.ArgumentException">BaudRate property is missing.</exception>
      <exception cref="T:System.ArgumentException">Parity property is missing.</exception>
      <exception cref="T:System.ArgumentException">StopBits property is missing.</exception>
      <exception cref="T:System.ArgumentException">DataBits property is missing.</exception>
    </member>
    <member name="T:Gemstone.Communication.SerialException">
      <summary>
            Defines an exception for errors related <see cref="T:Gemstone.Communication.SerialClient" /> connections.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.SerialException.#ctor(System.IO.Ports.SerialError,System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.SerialException" /> class.
            </summary>
      <param name="serialError">The <see cref="T:System.IO.Ports.SerialError" /> associated with the exception.</param>
      <param name="message">The error message that explains the reason for the exception, or <see langword="null" /> to use the default message associated with <paramref name="serialError" />.</param>
      <param name="innerException">The exception that is the cause of the current exception, or <see langword="null" /> if no inner exception is specified.</param>
    </member>
    <member name="M:Gemstone.Communication.SerialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.SerialException" /> class with serialized data.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Gemstone.Communication.SerialException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <see langword="null" />.</exception>
    </member>
    <member name="P:Gemstone.Communication.SerialException.SerialError">
      <summary>
            Gets the <see cref="T:System.IO.Ports.SerialError" /> associated with the <see cref="T:Gemstone.Communication.SerialException" />.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.ServerBase">
      <summary>
            Base class for a server involved in server-client communication.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.#ctor">
      <summary>
            Initializes a new instance of the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.#ctor(Gemstone.Communication.TransportProtocol,System.String)">
      <summary>
            Initializes a new instance of the server.
            </summary>
      <param name="transportProtocol">One of the <see cref="P:Gemstone.Communication.ServerBase.TransportProtocol" /> values.</param>
      <param name="configurationString">The data used by the server for initialization.</param>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ClientConnected">
      <summary>
            Occurs when a client connects to the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ClientConnectingException">
      <summary>
            Occurs when an exception is encountered while a client is connecting.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ClientDisconnected">
      <summary>
            Occurs when a client disconnects from the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.ClientIDs">
      <summary>
            Gets the IDs of clients connected to the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.ConfigurationString">
      <summary>
            Gets or sets the data required by the server to initialize.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Create(System.String)">
      <summary>
            Create a communications server
            </summary>
      <param name="configurationString">The configuration string for the server.</param>
      <returns>A communications server.</returns>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.CurrentState">
      <summary>
            Gets the current <see cref="T:Gemstone.Communication.ServerState" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ServerBase.DefaultMaxClientConnections">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ServerBase.MaxClientConnections" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ServerBase.DefaultReceiveBufferSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ServerBase.ReceiveBufferSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ServerBase.DefaultSendBufferSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ServerBase.SendBufferSize" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.DisconnectAll">
      <summary>
            Disconnects all of the connected clients.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.DisconnectOne(System.Guid)">
      <summary>
            When overridden in a derived class, disconnects a connected client.
            </summary>
      <param name="clientID">ID of the client to be disconnected.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Dispose">
      <summary>
            Releases all the resources used by the <see cref="T:Gemstone.Communication.ServerBase" /> object.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:Gemstone.Communication.ServerBase" /> object and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.Disposed">
      <summary>
            Occurs when the <see cref="T:Gemstone.Communication.ServerBase" /> has been disposed.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.Enabled">
      <summary>
            Gets or sets a boolean value that indicates whether the server is currently enabled.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Initialize">
      <summary>
            Initializes the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.Initialized">
      <summary>
            Gets a boolean value that indicates
            whether the server has been initialized.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.IsClientConnected(System.Guid)">
      <summary>
            Determines whether the given client is currently connected to the server.
            </summary>
      <param name="clientID">The ID of the client.</param>
      <returns>True if the client is connected; false otherwise.</returns>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.IsDisposed">
      <summary>
            Gets a flag that indicates whether the object has been disposed.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.MaxClientConnections">
      <summary>
            Gets or sets the maximum number of clients that can connect to the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Multicast(System.Byte[])">
      <summary>
            Sends data to all of the connected clients synchronously.
            </summary>
      <param name="data">The binary data that is to be sent.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Multicast(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to all of the connected clients synchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Multicast(System.String)">
      <summary>
            Sends data to all of the connected clients synchronously.
            </summary>
      <param name="data">The plain-text data that is to be sent.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.MulticastAsync(System.Byte[])">
      <summary>
            Sends data to all of the connected clients asynchronously.
            </summary>
      <param name="data">The binary data that is to be sent.</param>
      <returns>Array of <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.MulticastAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to all of the connected clients asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>Array of <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.MulticastAsync(System.String)">
      <summary>
            Sends data to all of the connected clients asynchronously.
            </summary>
      <param name="data">The plain-text data that is to be sent.</param>
      <returns>Array of <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.Name">
      <summary>
            Gets or sets the unique identifier of the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnClientConnected(System.Guid)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ClientConnected" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.ClientConnected" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnClientConnectingException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ClientConnectingException" /> event.
            </summary>
      <param name="ex">The <see cref="T:System.Exception" /> encountered when connecting to the client.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnClientDisconnected(System.Guid)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ClientDisconnected" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.ClientDisconnected" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnReceiveClientData(System.Guid,System.Int32)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientData" /> event.
            </summary>
      <param name="clientID">ID of the client from which data is received.</param>
      <param name="size">Number of bytes received from the client.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnReceiveClientDataComplete(System.Guid,System.Byte[],System.Int32)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataComplete" /> event.
            </summary>
      <param name="clientID">ID of the client from which data is received.</param>
      <param name="data">Data received from the client.</param>
      <param name="size">Number of bytes received from the client.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnReceiveClientDataException(System.Guid,System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnSendClientDataComplete(System.Guid)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.SendClientDataComplete" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataComplete" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnSendClientDataException(System.Guid,System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.</param>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnSendClientDataStart(System.Guid)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.SendClientDataStart" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataStart" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnServerStarted">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ServerStarted" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.OnServerStopped">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ServerStopped" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Read(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="clientID">ID of the client from which data buffer should be read.</param>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.ReadIndicies">
      <summary>
            Gets current read indices for received data buffers incremented at each <see cref="M:Gemstone.Communication.ServerBase.Read(System.Guid,System.Byte[],System.Int32,System.Int32)" /> call.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.ReceiveBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the server for receiving data from the clients.
            </summary>
      <exception cref="T:System.ArgumentException">The value being assigned is either zero or negative.</exception>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ReceiveClientData">
      <summary>
            Occurs when unprocessed data has been received from a client.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ReceiveClientDataComplete">
      <summary>
            Occurs when data received from a client has been processed and is ready for consumption.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ReceiveClientDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when receiving data from a client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.ReStart">
      <summary>
            Re-starts the server if currently running.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.RunTime">
      <summary>
            Gets the <see cref="T:Gemstone.Units.Time" /> for which the server has been running.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.SendBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the server for sending data to the clients.
            </summary>
      <exception cref="T:System.ArgumentException">The value being assigned is either zero or negative.</exception>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.SendClientDataComplete">
      <summary>
            Occurs when data has been sent to a client.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.SendClientDataException">
      <summary>
            Occurs when an <see cref="T:System.Exception" /> is encountered when sending data to a client.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.SendClientDataStart">
      <summary>
            Occurs when data is being sent to a client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.SendDataToAsync(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.SendTo(System.Guid,System.Byte[])">
      <summary>
            Sends data to the specified client synchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The binary data that is to be sent.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.SendTo(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the specified client synchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.SendTo(System.Guid,System.String)">
      <summary>
            Sends data to the specified client synchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The plain-text data that is to be sent.</param>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.SendToAsync(System.Guid,System.Byte[])">
      <summary>
            Sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The binary data that is to be sent.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.SendToAsync(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.SendToAsync(System.Guid,System.String)">
      <summary>
            Sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The plain-text data that is to be sent.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.ServerID">
      <summary>
            Gets the server's ID.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ServerStarted">
      <summary>
            Occurs when the server is started.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.ServerBase.ServerStopped">
      <summary>
            Occurs when the server is stopped.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Start">
      <summary>
            When overridden in a derived class, starts the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.Status">
      <summary>
            Gets the descriptive status of the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.Stop">
      <summary>
            When overridden in a derived class, stops the server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.TextEncoding">
      <summary>
            Gets or sets the <see cref="T:System.Text.Encoding" /> to be used for the text sent to the connected clients.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.ServerBase.TransportProtocol">
      <summary>
            Gets the <see cref="P:Gemstone.Communication.ServerBase.TransportProtocol" /> used by the server for the transportation of data with the clients.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.ServerBase.ValidateConfigurationString(System.String)">
      <summary>
            When overridden in a derived class, validates the specified <paramref name="configurationString" />.
            </summary>
      <param name="configurationString">The configuration string to be validated.</param>
    </member>
    <member name="T:Gemstone.Communication.ServerState">
      <summary>
            Indicates the current state of the server.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ServerState.Running">
      <summary>
            Server is running.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.ServerState.NotRunning">
      <summary>
            Server is not running.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.TcpClient">
      <summary>
            Represents a TCP-based communication client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TcpClient" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TcpClient" /> class.
            </summary>
      <param name="connectString">Connect string of the <see cref="T:Gemstone.Communication.TcpClient" />. See <see cref="F:Gemstone.Communication.TcpClient.DefaultConnectionString" /> for format.</param>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.AllowDualStackSocket">
      <summary>
            Gets or sets a boolean value that determines if dual-mode socket is allowed when endpoint address is IPv6.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.Client">
      <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket" /> object for the <see cref="T:Gemstone.Communication.TcpClient" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.ConnectAsync">
      <summary>
            Connects the <see cref="T:Gemstone.Communication.TcpClient" /> to the server asynchronously.
            </summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
      <exception cref="T:System.InvalidOperationException">Attempt is made to connect the <see cref="T:Gemstone.Communication.TcpClient" /> when it is not disconnected.</exception>
    </member>
    <member name="F:Gemstone.Communication.TcpClient.DefaultAllowDualStackSocket">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpClient.AllowDualStackSocket" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpClient.DefaultConnectionString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.ConnectionString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpClient.DefaultIgnoreInvalidCredentials">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpClient.IgnoreInvalidCredentials" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpClient.DefaultIntegratedSecurity">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpClient.IntegratedSecurity" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpClient.DefaultMaxSendQueueSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpClient.MaxSendQueueSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpClient.DefaultNoDelay">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpClient.NoDelay" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpClient.DefaultPayloadAware">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpClient.PayloadAware" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.Disconnect">
      <summary>
            Disconnects the <see cref="T:Gemstone.Communication.TcpClient" /> from the connected server synchronously.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:Gemstone.Communication.TcpClient" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.IgnoreInvalidCredentials">
      <summary>
            Gets or sets a boolean value that indicates whether the server
            should ignore errors when the client's credentials are invalid.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.IntegratedSecurity">
      <summary>
            Gets or sets a boolean value that indicates whether the current Windows account credentials are used for authentication.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.MaxSendQueueSize">
      <summary>
            Gets or sets the maximum size for the send queue before payloads are dumped from the queue.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.NetworkCredential">
      <summary>
            Gets or sets network credential that is used when
            <see cref="P:Gemstone.Communication.TcpClient.IntegratedSecurity" /> is set to <c>true</c>.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.NoDelay">
      <summary>
            Gets or sets a boolean value that determines if small packets are delivered to the remote host without delay.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.OnConnectionException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.OnReceiveDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.OnReceiveDataException(System.Net.Sockets.SocketException)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.OnSendDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.</param>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.PayloadAware">
      <summary>
            Gets or sets a boolean value that indicates whether the payload boundaries are to be preserved during transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.PayloadEndianOrder">
      <summary>
            Gets or sets the endian order to apply for encoding and decoding payload size in a <see cref="P:Gemstone.Communication.TcpClient.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.PayloadMarker">
      <summary>
            Gets or sets the byte sequence used to mark the beginning of a payload in a <see cref="P:Gemstone.Communication.TcpClient.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
      <exception cref="T:System.InvalidOperationException">No received data buffer has been defined to read.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <paramref name="length" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.SendDataAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the server asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.ServerUri">
      <summary>
            Gets the server URI of the <see cref="T:Gemstone.Communication.TcpClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.Status">
      <summary>
            Gets the descriptive status of the client.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpClient.TrackStatistics">
      <summary>
            Determines whether the base class should track statistics.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpClient.ValidateConnectionString(System.String)">
      <summary>
            Validates the specified <paramref name="connectionString" />.
            </summary>
      <param name="connectionString">Connection string to be validated.</param>
      <exception cref="T:System.ArgumentException">Server property is missing.</exception>
      <exception cref="T:System.FormatException">Server property is invalid.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Server port value is not between <see cref="F:Gemstone.Communication.Transport.PortRangeLow" /> and <see cref="F:Gemstone.Communication.Transport.PortRangeHigh" />.</exception>
    </member>
    <member name="T:Gemstone.Communication.TcpServer">
      <summary>
            Represents a TCP-based communication server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TcpServer" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TcpServer" /> class.
            </summary>
      <param name="configString">Config string of the <see cref="T:Gemstone.Communication.TcpServer" />. See <see cref="F:Gemstone.Communication.TcpServer.DefaultConfigurationString" /> for format.</param>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.AllowDualStackSocket">
      <summary>
            Gets or sets a boolean value that determines if dual-mode socket is allowed when endpoint address is IPv6.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpServer.DefaultAllowDualStackSocket">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpServer.AllowDualStackSocket" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpServer.DefaultConfigurationString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ServerBase.ConfigurationString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpServer.DefaultIgnoreInvalidCredentials">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpServer.IgnoreInvalidCredentials" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpServer.DefaultIntegratedSecurity">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpServer.IntegratedSecurity" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpServer.DefaultMaxSendQueueSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpServer.MaxSendQueueSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpServer.DefaultNoDelay">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpServer.NoDelay" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TcpServer.DefaultPayloadAware">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TcpServer.PayloadAware" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.DisconnectOne(System.Guid)">
      <summary>
            Disconnects the specified connected client.
            </summary>
      <param name="clientID">ID of the client to be disconnected.</param>
      <exception cref="T:System.InvalidOperationException">Client does not exist for the specified <paramref name="clientID" />.</exception>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.IgnoreInvalidCredentials">
      <summary>
            Gets or sets a boolean value that indicates whether the server
            should ignore errors when the client's credentials are invalid.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.IntegratedSecurity">
      <summary>
            Gets or sets a boolean value that indicates whether the client Windows account credentials are used for authentication.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.MaxSendQueueSize">
      <summary>
            Gets or sets the maximum size for the send queue before payloads are dumped from the queue.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.NoDelay">
      <summary>
            Gets or sets a boolean value that determines if small packets are delivered to the remote host without delay.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.OnReceiveClientDataException(System.Guid,System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.OnReceiveClientDataException(System.Guid,System.Net.Sockets.SocketException)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.OnSendClientDataException(System.Guid,System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.</param>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.</param>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.PayloadAware">
      <summary>
            Gets or sets a boolean value that indicates whether the payload boundaries are to be preserved during transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.PayloadEndianOrder">
      <summary>
            Gets or sets the endian order to apply for encoding and decoding payload size in a <see cref="P:Gemstone.Communication.TcpServer.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.PayloadMarker">
      <summary>
            Gets or sets the byte sequence used to mark the beginning of a payload in a <see cref="P:Gemstone.Communication.TcpServer.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.Read(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="clientID">ID of the client from which data buffer should be read.</param>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
      <exception cref="T:System.InvalidOperationException">
            No received data buffer has been defined to read -or-
            Specified <paramref name="clientID" /> does not exist, cannot read buffer.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <paramref name="length" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.SendDataToAsync(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.Server">
      <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket" /> object for the <see cref="T:Gemstone.Communication.TcpServer" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.Start">
      <summary>
            Starts the <see cref="T:Gemstone.Communication.TcpServer" /> synchronously and begins accepting client connections asynchronously.
            </summary>
      <exception cref="T:System.InvalidOperationException">Attempt is made to <see cref="M:Gemstone.Communication.TcpServer.Start" /> the <see cref="T:Gemstone.Communication.TcpServer" /> when it is running.</exception>
    </member>
    <member name="P:Gemstone.Communication.TcpServer.Status">
      <summary>
            Gets the descriptive status of the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.Stop">
      <summary>
            Stops the <see cref="T:Gemstone.Communication.TcpServer" /> synchronously and disconnects all connected clients.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.TryGetClient(System.Guid,Gemstone.Communication.TransportProvider{System.Net.Sockets.Socket}@)">
      <summary>
            Gets the <see cref="T:Gemstone.Communication.TransportProvider`1" /> object associated with the specified client ID.
            </summary>
      <param name="clientID">ID of the client.</param>
      <param name="tcpClient">The TCP client.</param>
      <returns>A <see cref="T:Gemstone.Communication.TransportProvider`1" /> object.</returns>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.TryGetClientPrincipal(System.Guid,System.Security.Principal.WindowsPrincipal@)">
      <summary>
            Gets the <see cref="T:System.Security.Principal.WindowsPrincipal" /> object associated with the specified client ID.
            </summary>
      <param name="clientID">ID of the client.</param>
      <param name="clientPrincipal">The principal of the client.</param>
      <returns>A <see cref="T:System.Security.Principal.WindowsPrincipal" /> object.</returns>
    </member>
    <member name="M:Gemstone.Communication.TcpServer.ValidateConfigurationString(System.String)">
      <summary>
            Validates the specified <paramref name="configurationString" />.
            </summary>
      <param name="configurationString">Configuration string to be validated.</param>
      <exception cref="T:System.ArgumentException">Port property is missing.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Port property value is not between <see cref="F:Gemstone.Communication.Transport.PortRangeLow" /> and <see cref="F:Gemstone.Communication.Transport.PortRangeHigh" />.</exception>
    </member>
    <member name="T:Gemstone.Communication.TlsClient">
      <summary>
            Represents a TCP-based communication client with SSL authentication and encryption.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TlsClient" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TlsClient" /> class.
            </summary>
      <param name="connectString">Connect string of the <see cref="T:Gemstone.Communication.TlsClient" />. See <see cref="F:Gemstone.Communication.TlsClient.DefaultConnectionString" /> for format.</param>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.AllowDualStackSocket">
      <summary>
            Gets or sets a boolean value that determines if dual-mode socket is allowed when endpoint address is IPv6.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.Certificate">
      <summary>
            Gets or sets the local certificate selected by the default <see cref="P:Gemstone.Communication.TlsClient.LocalCertificateSelectionCallback" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.CertificateChecker">
      <summary>
            Gets or sets the certificate checker used to validate remote certificates.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.CertificateFile">
      <summary>
            Gets or sets the path to the certificate used for authentication.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.CheckCertificateRevocation">
      <summary>
            Gets or sets a boolean value that determines whether the certificate revocation list is checked during authentication.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.Client">
      <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket" /> object for the <see cref="T:Gemstone.Communication.TlsClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.ClientCertificates">
      <summary>
            Gets the collection of X509 certificates for this client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.ConnectAsync">
      <summary>
            Connects the <see cref="T:Gemstone.Communication.TlsClient" /> to the server asynchronously.
            </summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
      <exception cref="T:System.InvalidOperationException">Attempt is made to connect the <see cref="T:Gemstone.Communication.TlsClient" /> when it is not disconnected.</exception>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultAllowDualStackSocket">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsClient.AllowDualStackSocket" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultConnectionString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.ConnectionString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultIgnoreInvalidCredentials">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsClient.IgnoreInvalidCredentials" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultIntegratedSecurity">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsClient.IntegratedSecurity" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultMaxSendQueueSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsClient.MaxSendQueueSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultNoDelay">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsClient.NoDelay" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultPayloadAware">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsClient.PayloadAware" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsClient.DefaultTrustedCertificatesPath">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsClient.TrustedCertificatesPath" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.Disconnect">
      <summary>
            When overridden in a derived class, disconnects client from the server synchronously.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:Gemstone.Communication.TlsClient" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.EnabledSslProtocols">
      <summary>
            Gets or sets a set of flags which determine the enabled <see cref="T:System.Security.Authentication.SslProtocols" />.
            </summary>
      <exception cref="T:System.Security.SecurityException">Failed to write event log entry for security warning about use of less secure TLS/SSL protocols.</exception>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.IgnoreInvalidCredentials">
      <summary>
            Gets or sets a boolean value that indicates whether the server
            should ignore errors when the client's credentials are invalid.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.IntegratedSecurity">
      <summary>
            Gets or sets a boolean value that indicates whether the current Windows account credentials are used for authentication.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.LocalCertificateSelectionCallback">
      <summary>
            Gets or sets the callback used to select a local certificate.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.MaxSendQueueSize">
      <summary>
            Gets or sets the maximum size for the send queue before payloads are dumped from the queue.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.NetworkCredential">
      <summary>
            Gets or sets network credential that is used when
            <see cref="P:Gemstone.Communication.TlsClient.IntegratedSecurity" /> is set to <c>true</c>.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.NoDelay">
      <summary>
            Gets or sets a boolean value that determines if small packets are delivered to the remote host without delay.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.OnConnectionException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.OnReceiveDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.OnReceiveDataException(System.Net.Sockets.SocketException)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.OnSendDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.</param>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.PayloadAware">
      <summary>
            Gets or sets a boolean value that indicates whether the payload boundaries are to be preserved during transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.PayloadEndianOrder">
      <summary>
            Gets or sets the endian order to apply for encoding and decoding payload size in a <see cref="P:Gemstone.Communication.TlsClient.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.PayloadMarker">
      <summary>
            Gets or sets the byte sequence used to mark the beginning of a payload in a <see cref="P:Gemstone.Communication.TlsClient.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.RemoteCertificateValidationCallback">
      <summary>
            Gets or sets the callback used to verify remote certificates.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.SendDataAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            When overridden in a derived class, sends data to the server asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.ServerUri">
      <summary>
            Gets the server URI of the <see cref="T:Gemstone.Communication.TlsClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.SslStream">
      <summary>
            Gets the <see cref="P:Gemstone.Communication.TlsClient.SslStream" /> object for the <see cref="T:Gemstone.Communication.TlsClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.Status">
      <summary>
            Gets the descriptive status of the client.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.TrackStatistics">
      <summary>
            Determines whether the base class should track statistics.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.TrustedCertificatesPath">
      <summary>
            Gets or sets the path to the directory containing the trusted certificates.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsClient.ValidateConnectionString(System.String)">
      <summary>
            When overridden in a derived class, validates the specified <paramref name="connectionString" />.
            </summary>
      <param name="connectionString">The connection string to be validated.</param>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.ValidChainFlags">
      <summary>
            Gets or sets the set of valid chain flags used when validating remote certificates.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsClient.ValidPolicyErrors">
      <summary>
            Gets or sets the set of valid policy errors when validating remote certificates.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.TlsServer">
      <summary>
            Represents a TCP-based communication server with SSL authentication and encryption.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TcpServer" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TcpServer" /> class.
            </summary>
      <param name="configString">Config string of the <see cref="T:Gemstone.Communication.TcpServer" />. See <see cref="F:Gemstone.Communication.TlsServer.DefaultConfigurationString" /> for format.</param>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.AllowDualStackSocket">
      <summary>
            Gets or sets a boolean value that determines if dual-mode socket is allowed when endpoint address is IPv6.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.Certificate">
      <summary>
            Gets or sets the certificate used to identify this server.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.CertificateChecker">
      <summary>
            Gets or sets the certificate checker used to validate remote certificates.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.CertificateFile">
      <summary>
            Gets or sets the path to the certificate used for authentication.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.CheckCertificateRevocation">
      <summary>
            Gets or sets a boolean value that determines whether the certificate revocation list is checked during authentication.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultAllowDualStackSocket">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsServer.AllowDualStackSocket" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultConfigurationString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ServerBase.ConfigurationString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultIgnoreInvalidCredentials">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsServer.IgnoreInvalidCredentials" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultIntegratedSecurity">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsServer.IntegratedSecurity" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultMaxSendQueueSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsServer.MaxSendQueueSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultNoDelay">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsServer.NoDelay" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultPayloadAware">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsServer.PayloadAware" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.DefaultTrustedCertificatesPath">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.TlsServer.TrustedCertificatesPath" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.DisconnectOne(System.Guid)">
      <summary>
            Disconnects the specified connected client.
            </summary>
      <param name="clientID">ID of the client to be disconnected.</param>
      <exception cref="T:System.InvalidOperationException">Client does not exist for the specified <paramref name="clientID" />.</exception>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.EnabledSslProtocols">
      <summary>
            Gets or sets a set of flags which determine the enabled <see cref="T:System.Security.Authentication.SslProtocols" />.
            </summary>
      <exception cref="T:System.Security.SecurityException">Failed to write event log entry for security warning about use of less secure TLS/SSL protocols.</exception>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.IgnoreInvalidCredentials">
      <summary>
            Gets or sets a boolean value that indicates whether the server
            should ignore errors when the client's credentials are invalid.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.IntegratedSecurity">
      <summary>
            Gets or sets a boolean value that indicates whether the client Windows account credentials are used for authentication.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.LocalCertificateSelectionCallback">
      <summary>
            Gets or sets the callback used to select local certificates.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.MaxSendQueueSize">
      <summary>
            Gets or sets the maximum size for the send queue before payloads are dumped from the queue.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.NoDelay">
      <summary>
            Gets or sets a boolean value that determines if small packets are delivered to the remote host without delay.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.PayloadAware">
      <summary>
            Gets or sets a boolean value that indicates whether the payload boundaries are to be preserved during transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.PayloadEndianOrder">
      <summary>
            Gets or sets the endian order to apply for encoding and decoding payload size in a <see cref="P:Gemstone.Communication.TlsServer.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.PayloadMarker">
      <summary>
            Gets or sets the byte sequence used to mark the beginning of a payload in a <see cref="P:Gemstone.Communication.TlsServer.PayloadAware" /> transmission.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.Read(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="clientID">ID of the client from which data buffer should be read.</param>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
      <exception cref="T:System.InvalidOperationException">
            No received data buffer has been defined to read -or-
            Specified <paramref name="clientID" /> does not exist, cannot read buffer.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <paramref name="length" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.RemoteCertificateValidationCallback">
      <summary>
            Gets or sets the callback used to validate remote certificates.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.RequireClientCertificate">
      <summary>
            Gets or sets a flag that determines whether a client certificate is required during authentication.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.SendDataToAsync(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.Server">
      <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket" /> object for the <see cref="T:Gemstone.Communication.TcpServer" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.Start">
      <summary>
            Starts the <see cref="T:Gemstone.Communication.TcpServer" /> synchronously and begins accepting client connections asynchronously.
            </summary>
      <exception cref="T:System.InvalidOperationException">Attempt is made to <see cref="M:Gemstone.Communication.TlsServer.Start" /> the <see cref="T:Gemstone.Communication.TcpServer" /> when it is running.</exception>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.Status">
      <summary>
            Gets the descriptive status of the server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.Stop">
      <summary>
            Stops the <see cref="T:Gemstone.Communication.TcpServer" /> synchronously and disconnects all connected clients.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.TrustedCertificatesPath">
      <summary>
            Gets or sets the path to the directory containing the trusted certificates.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.TryGetClient(System.Guid,Gemstone.Communication.TransportProvider{Gemstone.Communication.TlsServer.TlsSocket}@)">
      <summary>
            Gets the <see cref="T:Gemstone.Communication.TransportProvider`1" /> object associated with the specified client ID.
            </summary>
      <param name="clientID">ID of the client.</param>
      <param name="tlsClient">The TLS client.</param>
      <returns>An <see cref="T:Gemstone.Communication.TransportProvider`1" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">Client does not exist for the specified <paramref name="clientID" />.</exception>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.TryGetClientPrincipal(System.Guid,System.Security.Principal.WindowsPrincipal@)">
      <summary>
            Gets the <see cref="T:System.Security.Principal.WindowsPrincipal" /> object associated with the specified client ID.
            </summary>
      <param name="clientID">ID of the client.</param>
      <param name="clientPrincipal">The principal of the client.</param>
      <returns>A <see cref="T:System.Security.Principal.WindowsPrincipal" /> object.</returns>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.ValidateConfigurationString(System.String)">
      <summary>
            Validates the specified <paramref name="configurationString" />.
            </summary>
      <param name="configurationString">Configuration string to be validated.</param>
      <exception cref="T:System.ArgumentException">Port property is missing.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Port property value is not between <see cref="F:Gemstone.Communication.Transport.PortRangeLow" /> and <see cref="F:Gemstone.Communication.Transport.PortRangeHigh" />.</exception>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.ValidChainFlags">
      <summary>
            Gets or sets the set of valid chain flags used when validating remote certificates.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TlsServer.ValidPolicyErrors">
      <summary>
            Gets or sets the set of valid policy errors when validating remote certificates.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.TlsServer.TlsSocket">
      <summary>
            Represents a socket that has been wrapped
            in an <see cref="F:Gemstone.Communication.TlsServer.TlsSocket.SslStream" /> for encryption.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.TlsSocket.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Gemstone.Communication.TlsServer.TlsSocket</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Gemstone.Communication.TlsServer.TlsSocket.Dispose">
      <summary>
            Performs application-defined tasks associated with
            freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.TlsSocket.RemoteEndPoint">
      <summary>
            The end point of the remote client connecting to this server.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.TlsSocket.Socket">
      <summary>
            Gets the <see cref="F:Gemstone.Communication.TlsServer.TlsSocket.Socket" /> connected to the remote host.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TlsServer.TlsSocket.SslStream">
      <summary>
            Gets the stream through which data is passed when
            sending to or receiving from the remote host.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.Transport">
      <summary>
            Defines helper methods related to IP socket based communications.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Transport.CreateEndPoint(System.String,System.Int32,Gemstone.Communication.IPStack)">
      <summary>
            Creates an <see cref="T:System.Net.IPEndPoint" /> for the specified host name and port number.
            </summary>
      <param name="hostNameOrAddress">The host name or IP address to resolve.</param>
      <param name="port">The port number to be associated with the address.</param>
      <param name="stack">Desired IP stack to use.</param>
      <returns>An <see cref="T:System.Net.IPEndPoint" /> object.</returns>
    </member>
    <member name="M:Gemstone.Communication.Transport.CreateSocket(System.String,System.Int32,System.Net.Sockets.ProtocolType,Gemstone.Communication.IPStack,System.Boolean)">
      <summary>
            Creates a <see cref="T:System.Net.Sockets.Socket" /> for the specified <paramref name="port" /> and <paramref name="protocol" />.
            </summary>
      <param name="address">The local address where the <see cref="T:System.Net.Sockets.Socket" /> will be bound.</param>
      <param name="port">The port number at which the <see cref="T:System.Net.Sockets.Socket" /> will be bound.</param>
      <param name="protocol">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</param>
      <param name="stack">Desired IP stack to use.</param>
      <param name="allowDualStackSocket">Determines if dual-mode socket is allowed when endpoint address is IPv6.</param>
      <returns>An <see cref="T:System.Net.Sockets.Socket" /> object.</returns>
    </member>
    <member name="F:Gemstone.Communication.Transport.EndpointFormatRegex">
      <summary>
            Regular expression used to validate the format for an endpoint.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Transport.GetDefaultIPStack">
      <summary>
            Gets the default IP stack for this system.
            </summary>
      <returns>
            System's assumed default IP stack.
            </returns>
    </member>
    <member name="M:Gemstone.Communication.Transport.GetInterfaceIPStack(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            Derives the desired <see cref="T:Gemstone.Communication.IPStack" /> from the "interface" setting in the connection string key/value pairs.
            If interface is not specified, <see cref="T:Gemstone.Communication.IPStack" /> is derived from the server value in connectionStringEntries
            </summary>
      <param name="connectionStringEntries">Connection string key/value pairs.</param>
      <returns>Desired <see cref="T:Gemstone.Communication.IPStack" /> based on "interface" setting.</returns>
    </member>
    <member name="M:Gemstone.Communication.Transport.IsDestinationReachable(System.Net.IPEndPoint)">
      <summary>
            Determines if the specified UDP destination is listening for data.
            </summary>
      <param name="targetIPEndPoint">The <see cref="T:System.Net.IPEndPoint" /> for the UDP destination to be checked.</param>
      <returns>true if the UDP destination is listening for data; otherwise false.</returns>
    </member>
    <member name="M:Gemstone.Communication.Transport.IsIPv6IP(System.String)">
      <summary>
            Determines if the specified <paramref name="ipAddress" /> is an IPv6 IP.
            </summary>
      <param name="ipAddress">IP address to check.</param>
      <returns>true if the <paramref name="ipAddress" /> is IPv6 IP; otherwise false.</returns>
    </member>
    <member name="M:Gemstone.Communication.Transport.IsLocalAddress(System.String)">
      <summary>
            Determines if an IP address (or DNS name) is a local IP address. Method could fail if machine has DNS issues.
            </summary>
      <param name="hostNameOrAddress">DNS name or IP address to test.</param>
      <returns>
        <c>true</c> if <paramref name="hostNameOrAddress" /> is a local IP address; otherwise <c>false</c>.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hostNameOrAddress" /> is an invalid IP address.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostNameOrAddress" /> is null.</exception>
    </member>
    <member name="M:Gemstone.Communication.Transport.IsMulticastIP(System.Net.IPAddress)">
      <summary>
            Determines if the specified <paramref name="ipAddress" /> is a multicast IP.
            </summary>
      <param name="ipAddress">IP address to check.</param>
      <returns>true if the <paramref name="ipAddress" /> is multicast IP; otherwise false.</returns>
    </member>
    <member name="M:Gemstone.Communication.Transport.IsPortNumberValid(System.String)">
      <summary>
            Determines whether the specified port is valid.
            </summary>
      <param name="port">The port number to be validated.</param>
      <returns>True if the port number is valid.</returns>
    </member>
    <member name="F:Gemstone.Communication.Transport.PortRangeHigh">
      <summary>
            Specifies the highest valid port number for a <see cref="T:System.Net.Sockets.Socket" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Transport.PortRangeLow">
      <summary>
            Specifies the lowest valid port number for a <see cref="T:System.Net.Sockets.Socket" />.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.TransportProtocol">
      <summary>
            Indicates the protocol used in server-client communication.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProtocol.Tcp">
      <summary>
        <see cref="T:Gemstone.Communication.TransportProtocol" /> is Transmission Control Protocol.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProtocol.Udp">
      <summary>
        <see cref="T:Gemstone.Communication.TransportProtocol" /> is User Datagram Protocol.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProtocol.Serial">
      <summary>
        <see cref="T:Gemstone.Communication.TransportProtocol" /> is serial interface.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProtocol.File">
      <summary>
        <see cref="T:Gemstone.Communication.TransportProtocol" /> is file-system based.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.TransportProvider`1">
      <summary>
            A class for managing the communication between server and client.
            </summary>
      <typeparam name="T">
        <see cref="T:System.Type" /> of the object used for server-client communication.</typeparam>
    </member>
    <member name="M:Gemstone.Communication.TransportProvider`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.TransportProvider`1" /> class.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProvider`1.BytesReceived">
      <summary>
            Number of bytes received in <see cref="P:Gemstone.Communication.TransportProvider`1.ReceiveBuffer" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProvider`1.ID">
      <summary>
            ID of the <see cref="T:Gemstone.Communication.TransportProvider`1" /> object.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProvider`1.MulticastMembershipAddresses">
      <summary>
            Optional multicast membership addresses used when a multicast source address is specified.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportProvider`1.Provider">
      <summary>
            Provider for the transportation of data.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TransportProvider`1.ReceiveBuffer">
      <summary>
            Gets buffer used for receiving data.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TransportProvider`1.ReceiveBufferSize">
      <summary>
            Gets receive buffer requested size.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TransportProvider`1.Reset">
      <summary>
            Resets <see cref="T:Gemstone.Communication.TransportProvider`1" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TransportProvider`1.SendBuffer">
      <summary>
            Gets buffer used for sending data.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.TransportProvider`1.SendBufferSize">
      <summary>
            Gets send buffer requested size.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TransportProvider`1.SetReceiveBuffer(System.Int32)">
      <summary>
            Establishes (or reestablishes) a receive buffer of a given size.
            </summary>
      <param name="size">Desired minimum size of receive buffer.</param>
      <returns>New receive buffer.</returns>
    </member>
    <member name="M:Gemstone.Communication.TransportProvider`1.SetSendBuffer(System.Int32)">
      <summary>
            Establishes (or reestablishes) a send buffer of a given size.
            </summary>
      <param name="size">Desired minimum size of send buffer.</param>
      <returns>New send buffer.</returns>
    </member>
    <member name="F:Gemstone.Communication.TransportProvider`1.Statistics">
      <summary>
        <see cref="T:Gemstone.Communication.TransportStatistics" /> for the <see cref="T:Gemstone.Communication.TransportProvider`1" /> object.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.TransportStatistics">
      <summary>
            A class for statistics related to server-client communication.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TransportStatistics.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Gemstone.Communication.TransportStatistics</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportStatistics.LastBytesReceived">
      <summary>
            Number of bytes received in the last receive operation.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportStatistics.LastBytesSent">
      <summary>
            Number of bytes sent in the last send operation.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportStatistics.LastReceive">
      <summary>
        <see cref="T:System.DateTime" /> of the last receive operation. (UTC Time)
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportStatistics.LastSend">
      <summary>
        <see cref="T:System.DateTime" /> of the last send operation. (UTC Time)
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TransportStatistics.Reset">
      <summary>
            Resets the <see cref="T:Gemstone.Communication.TransportStatistics" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportStatistics.TotalBytesReceived">
      <summary>
            Total number of bytes received.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.TransportStatistics.TotalBytesSent">
      <summary>
            Total number of bytes sent.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.TransportStatistics.UpdateBytesReceived(System.Int32)">
      <summary>
            Updates statistics related to receiving of data.
            </summary>
      <param name="bytesReceived">Number of bytes received in the receive operation.</param>
    </member>
    <member name="M:Gemstone.Communication.TransportStatistics.UpdateBytesSent(System.Int32)">
      <summary>
            Updates statistics related to sending of data.
            </summary>
      <param name="bytesSent">Number of bytes sent in the send operation.</param>
    </member>
    <member name="T:Gemstone.Communication.UdpClient">
      <summary>
            Represents a UDP-based communication server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.UdpClient" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.UdpClient" /> class.
            </summary>
      <param name="connectString">Connect string of the <see cref="T:Gemstone.Communication.UdpClient" />. See <see cref="F:Gemstone.Communication.UdpClient.DefaultConnectionString" /> for format.</param>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.AddMulticastMembership(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>
            Adds a multicast membership to the UDP socket.
            </summary>
      <param name="serverAddress">Multicast address to join.</param>
      <param name="sourceAddress">Address which defines the source of the data or null if the membership is not source-specific.</param>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.AllowDualStackSocket">
      <summary>
            Gets or sets a boolean value that determines if dual-mode socket is allowed when endpoint address is IPv6.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.Client">
      <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket" /> object for the <see cref="T:Gemstone.Communication.UdpClient" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.ConnectAsync">
      <summary>
            Connects the <see cref="T:Gemstone.Communication.UdpClient" /> to the server asynchronously.
            </summary>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
      <exception cref="T:System.FormatException">Server property in <see cref="P:Gemstone.Communication.ClientBase.ConnectionString" /> is invalid.</exception>
      <exception cref="T:System.InvalidOperationException">Attempt is made to connect the <see cref="T:Gemstone.Communication.UdpClient" /> when it is not disconnected.</exception>
    </member>
    <member name="F:Gemstone.Communication.UdpClient.DefaultAllowDualStackSocket">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.UdpClient.AllowDualStackSocket" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpClient.DefaultConnectionString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.ConnectionString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpClient.DefaultMaxPacketSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.UdpClient.MaxPacketSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpClient.DefaultMaxSendQueueSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.UdpClient.MaxSendQueueSize" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpClient.DefaultReceiveBufferSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ClientBase.ReceiveBufferSize" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.Disconnect">
      <summary>
            Disconnects the <see cref="T:Gemstone.Communication.UdpClient" /> from the connected server synchronously.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the <see cref="T:Gemstone.Communication.UdpClient" /> and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.DropMulticastMembership(System.Net.IPAddress,System.Net.IPAddress)">
      <summary>
            Drops a multicast membership from the UDP socket.
            </summary>
      <param name="serverAddress">Multicast address to drop.</param>
      <param name="sourceAddress">Address which defines the source of the data or null if the membership is not source-specific.</param>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.MaxPacketSize">
      <summary>
            Gets or sets the maximum expected size for packets being received by this <see cref="T:Gemstone.Communication.UdpClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.MaxSendQueueSize">
      <summary>
            Gets or sets the maximum size for the send queue before payloads are dumped from the queue.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.OnConnectionException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ConnectionException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.OnConnectionTerminated">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ConnectionTerminated" /> event.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.OnReceiveDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.ReceiveDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.OnSendDataException(System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.
            </summary>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ClientBase.SendDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
      <exception cref="T:System.InvalidOperationException">No received data buffer has been defined to read.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <paramref name="length" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.ReceiveBufferSize">
      <summary>
            Gets or sets the size of the buffer used by the client for receiving data from the server.
            </summary>
      <exception cref="T:System.ArgumentException">The value being assigned is either zero or negative.</exception>
    </member>
    <member name="E:Gemstone.Communication.UdpClient.ReceiveDataFrom">
      <summary>
            Occurs when unprocessed data has been received from the server.
            </summary>
    </member>
    <member name="E:Gemstone.Communication.UdpClient.ReceiveDataFromComplete">
      <summary>
            Occurs when data received from the server has been processed and is ready for consumption.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.ReceivePacketInfo">
      <summary>
            Gets or sets the flag that determines whether the UDP client
            should attempt to receive packet info when receiving data
            from the socket.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.SendDataAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the server asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.SendDataToAsync(System.Byte[],System.Int32,System.Int32,System.Net.EndPoint)">
      <summary>
            Sends data to the server asynchronously.
            </summary>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <param name="destination">The end point which identifies the destination for the data.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.ServerUri">
      <summary>
            Gets the server URI of the <see cref="T:Gemstone.Communication.UdpClient" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.Status">
      <summary>
            Gets the descriptive status of the client.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.UdpClient.TrackStatistics">
      <summary>
            Determines whether the base class should track statistics.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpClient.ValidateConnectionString(System.String)">
      <summary>
            Validates the specified <paramref name="connectionString" />.
            </summary>
      <param name="connectionString">Connection string to be validated.</param>
      <exception cref="T:System.ArgumentException">Port property is missing.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Port property value is not between <see cref="F:Gemstone.Communication.Transport.PortRangeLow" /> and <see cref="F:Gemstone.Communication.Transport.PortRangeHigh" />.</exception>
    </member>
    <member name="T:Gemstone.Communication.UdpServer">
      <summary>
            Represents a UDP-based communication server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.UdpServer" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.UdpServer" /> class.
            </summary>
      <param name="configString">Configuration string of the <see cref="T:Gemstone.Communication.UdpServer" />. See <see cref="F:Gemstone.Communication.UdpServer.DefaultConfigurationString" /> for format.</param>
    </member>
    <member name="P:Gemstone.Communication.UdpServer.AllowDualStackSocket">
      <summary>
            Gets or sets a boolean value that determines if dual-mode socket is allowed when endpoint address is IPv6.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.UdpServer.ClientIdentificationMode">
      <summary>
            Gets or sets the mode by which the UDP server will identify its clients when receiving messages.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpServer.DefaultAllowDualStackSocket">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.UdpServer.AllowDualStackSocket" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpServer.DefaultClientIdentificationMode">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.UdpServer.ClientIdentificationMode" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpServer.DefaultConfigurationString">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.ServerBase.ConfigurationString" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpServer.DefaultDynamicClientEndPoints">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.UdpServer.DynamicClientEndPoints" /> property.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.UdpServer.DefaultMaxSendQueueSize">
      <summary>
            Specifies the default value for the <see cref="P:Gemstone.Communication.UdpServer.MaxSendQueueSize" /> property.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.DisconnectOne(System.Guid)">
      <summary>
            Disconnects the specified connected client.
            </summary>
      <param name="clientID">ID of the client to be disconnected.</param>
      <exception cref="T:System.InvalidOperationException">Client does not exist for the specified <paramref name="clientID" />.</exception>
    </member>
    <member name="P:Gemstone.Communication.UdpServer.DynamicClientEndPoints">
      <summary>
            Gets or sets a boolean value that determines if UDP server should always
            send responses to clients on the port that data is received from the client.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.UdpServer.MaxSendQueueSize">
      <summary>
            Gets or sets the maximum size for the send queue before payloads are dumped from the queue.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.OnReceiveClientDataException(System.Guid,System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ServerBase.ReceiveClientDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.OnSendClientDataException(System.Guid,System.Exception)">
      <summary>
            Raises the <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.
            </summary>
      <param name="clientID">ID of client to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.</param>
      <param name="ex">Exception to send to <see cref="E:Gemstone.Communication.ServerBase.SendClientDataException" /> event.</param>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.Read(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a number of bytes from the current received data buffer and writes those bytes into a byte array at the specified offset.
            </summary>
      <param name="clientID">ID of the client from which data buffer should be read.</param>
      <param name="buffer">Destination buffer used to hold copied bytes.</param>
      <param name="startIndex">0-based starting index into destination <paramref name="buffer" /> to begin writing data.</param>
      <param name="length">The number of bytes to read from current received data buffer and write into <paramref name="buffer" />.</param>
      <returns>The number of bytes read.</returns>
      <exception cref="T:System.InvalidOperationException">
            No received data buffer has been defined to read -or-
            Specified <paramref name="clientID" /> does not exist, cannot read buffer.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <paramref name="length" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <paramref name="length" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.SendDataToAsync(System.Guid,System.Byte[],System.Int32,System.Int32)">
      <summary>
            Sends data to the specified client asynchronously.
            </summary>
      <param name="clientID">ID of the client to which the data is to be sent.</param>
      <param name="data">The buffer that contains the binary data to be sent.</param>
      <param name="offset">The zero-based position in the <paramref name="data" /> at which to begin sending data.</param>
      <param name="length">The number of bytes to be sent from <paramref name="data" /> starting at the <paramref name="offset" />.</param>
      <returns>
        <see cref="T:System.Threading.WaitHandle" /> for the asynchronous operation.</returns>
    </member>
    <member name="P:Gemstone.Communication.UdpServer.Server">
      <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket" /> object for the <see cref="T:Gemstone.Communication.UdpServer" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.Start">
      <summary>
            Starts the <see cref="T:Gemstone.Communication.UdpServer" /> synchronously and begins accepting client connections asynchronously.
            </summary>
      <exception cref="T:System.InvalidOperationException">Attempt is made to <see cref="M:Gemstone.Communication.UdpServer.Start" /> the <see cref="T:Gemstone.Communication.UdpServer" /> when it is running.</exception>
    </member>
    <member name="P:Gemstone.Communication.UdpServer.Status">
      <summary>
            Gets the descriptive status of the client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.Stop">
      <summary>
            Stops the <see cref="T:Gemstone.Communication.UdpServer" /> synchronously and disconnects all connected clients.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.TryGetClient(System.Guid,Gemstone.Communication.TransportProvider{System.Net.EndPoint}@)">
      <summary>
            Gets the <see cref="T:Gemstone.Communication.TransportProvider`1" /> object associated with the specified client ID.
            </summary>
      <param name="clientID">ID of the client.</param>
      <param name="udpClient">The UDP client.</param>
      <returns>An <see cref="T:Gemstone.Communication.TransportProvider`1" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">Client does not exist for the specified <paramref name="clientID" />.</exception>
    </member>
    <member name="M:Gemstone.Communication.UdpServer.ValidateConfigurationString(System.String)">
      <summary>
            Validates the specified <paramref name="configurationString" />.
            </summary>
      <param name="configurationString">Configuration string to be validated.</param>
      <exception cref="T:System.ArgumentException">Port property is missing.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Port property value is not between <see cref="F:Gemstone.Communication.Transport.PortRangeLow" /> and <see cref="F:Gemstone.Communication.Transport.PortRangeHigh" />.</exception>
    </member>
    <member name="T:Gemstone.Communication.Radius.AttributeType">
      <summary>
            Specifies the type of <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.UserName">
      <summary>
            Attribute indicates the name of the user to be authenticated.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.UserPassword">
      <summary>
            Attribute indicates the password of the user to be authenticated.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.ChapPassword">
      <summary>
            Attribute indicates the response provided by a PPP CHAP user in response to the challenge.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.NasIpAddress">
      <summary>
            Attribute indicates the identifying IP address of the NAS requesting user authentication.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.NasPort">
      <summary>
            Attribute indicates the physical port number of the NAS which is authenticating the user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.ServiceType">
      <summary>
            Attribute indicates the type of service the user has requested, or the type of service to be provided.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedProtocol">
      <summary>
            Attribute indicates the framing to be used for framed access.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedIpAddress">
      <summary>
            Attribute indicates the address to be configured for the user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedIpNetmask">
      <summary>
            Attribute indicates the IP net-mask to be configured for the user when user is a router to a network.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedRouting">
      <summary>
            Attribute indicates the routing method for the user when user is a router to a network.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FilterId">
      <summary>
            Attribute indicates the name of the filter list for this user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedMtu">
      <summary>
            Attribute indicates the MTU to be configured for the user when it is not negotiated by some other means.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedCompression">
      <summary>
            Attribute indicates a compression protocol to be used for the link.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.LoginIpHost">
      <summary>
            Attribute indicates the system with which to connect the user when <see cref="F:Gemstone.Communication.Radius.AttributeType.LoginService" /> attribute is included.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.LoginService">
      <summary>
            Attribute indicates the service to use to connect the user to the login host.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.LoginTcpPort">
      <summary>
            Attribute indicates the TCP port with which the user is to be connected when <see cref="F:Gemstone.Communication.Radius.AttributeType.LoginService" /> attribute is included.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.ReplyMessage">
      <summary>
            Attribute indicates the text which may be displayed to the user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.CallbackNumber">
      <summary>
            Attribute indicates a dialing string to be used for callback.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.CallbackId">
      <summary>
            Attribute indicates the name of a place to be called.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedRoute">
      <summary>
            Attribute provides routing information to be configured for the user on the NAS.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedIpxNetwork">
      <summary>
            Attribute indicates the IPX Network number to be configured for the user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.State">
      <summary>
            Attribute available to be sent by the server to the client in an <see cref="F:Gemstone.Communication.Radius.PacketType.AccessChallenge" /> and must be 
            sent unmodified from the client to the server in the new <see cref="F:Gemstone.Communication.Radius.PacketType.AccessRequest" /> reply to the challenge.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.Class">
      <summary>
            Attribute available to be sent by the server to the client in an <see cref="F:Gemstone.Communication.Radius.PacketType.AccessAccept" /> and should 
            be sent unmodified by the client to the accounting server as part of the <see cref="F:Gemstone.Communication.Radius.PacketType.AccountingRequest" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.VendorSpecific">
      <summary>
            Attribute available to allow vendors to support their own extended attributes.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.SessionTimeout">
      <summary>
            Attribute sets the maximum number of seconds of service to be provided to the user before termination of the session or prompt.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.IdleTimeout">
      <summary>
            Attribute sets the maximum number of consecutive seconds of idle connection allowed to the user before termination of the session or prompt.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.TerminationAction">
      <summary>
            Attribute indicates the action the NAS should take when the specified service is complete.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.CallerStationId">
      <summary>
            Attribute indicates the phone number that the user called using DNIS or similar technology.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.CallingStationId">
      <summary>
            Attribute indicates the phone number the call came from using ANI or similar technology.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.NasIdentifier">
      <summary>
            Attribute indicates a string identifier for the NAS originating the AccessRequest.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.ProxyState">
      <summary>
            Attribute indicates the state a proxy server forwarding requests to the server.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.LoginLatService">
      <summary>
            Attribute indicates the system with which the user is to be connected by LAT.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.LoginLatNode">
      <summary>
            Attribute indicates the Node with which the user is to be automatically connected by LAT.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.LoginLatGroup">
      <summary>
            Attribute indicates the string identifier for the LAT group codes which the user is authorized to use.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedAppleTalkLink">
      <summary>
            Attribute indicates the AppleTalk network number which should be used for the serial link to the user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedAppleTalkNetwork">
      <summary>
            Attribute indicates the AppleTalk Network number which the NAS should probe to allocate an AppleTalk node for the user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.FramedAppleTalkZone">
      <summary>
            Attribute indicates the AppleTalk Default Zone to be used for this user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.ChapChallenge">
      <summary>
            Attribute contains the CHAP Challenge sent by the NAS to a PPP CHAP user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.NasPortType">
      <summary>
            Attribute indicates the type of physical port of the NAS which is authenticating the user.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.PortLimit">
      <summary>
            Attribute sets the maximum number of ports to be provided to the user by the NAS.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.AttributeType.LoginLatPort">
      <summary>
            Attribute indicates the Port with which the user is to be connected by the LAT.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.Radius.PacketType">
      <summary>
            Specifies the type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" />.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccessRequest">
      <summary>
            Packet sent to a RADIUS server for verification of credentials.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccessAccept">
      <summary>
            Packet sent by a RADIUS server when credential verification is successful.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccessReject">
      <summary>
            Packet sent by a RADIUS server when credential verification is unsuccessful.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccountingRequest">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccountingResponse">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccountingStatus">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.PasswordRequest">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.PasswordAccept">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.PasswordReject">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccountingMessage">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.AccessChallenge">
      <summary>
            Packet sent by a RADIUS server when further information is needed for credential verification.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.StatuServer">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.PacketType.StatusClient">
      <summary>
            Not used. No description available. [RFC 2882]
            </summary>
    </member>
    <member name="T:Gemstone.Communication.Radius.RadiusClient">
      <summary>
            Represents a RADIUS communication client.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.#ctor(System.String,System.Int32,System.String)">
      <summary>
            Creates an instance of RADIUS client for sending request to a RADIUS server.
            </summary>
      <param name="serverName">Name or address of the RADIUS server.</param>
      <param name="serverPort">Port number of the RADIUS server.</param>
      <param name="sharedSecret">Shared secret used for encryption and authentication.</param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.#ctor(System.String,System.String)">
      <summary>
            Creates an instance of RADIUS client for sending request to a RADIUS server.
            </summary>
      <param name="serverName">Name or address of the RADIUS server.</param>
      <param name="sharedSecret">Shared secret used for encryption and authentication.</param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.Authenticate(System.String,System.String)">
      <summary>
            Authenticates the username and password against the RADIUS server.
            </summary>
      <param name="username">Username to be authenticated.</param>
      <param name="password">Password to be authenticated.</param>
      <returns>Response packet received from the server for the authentication request.</returns>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.Authenticate(System.String,System.String,System.Byte[])">
      <summary>
            Authenticates the username and password against the RADIUS server.
            </summary>
      <param name="username">Username to be authenticated.</param>
      <param name="password">Password to be authenticated.</param>
      <param name="state">State value from a previous challenge response.</param>
      <returns>Response packet received from the server for the authentication request.</returns>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.CheckDisposed">
      <summary>
            Helper method to check whether or not the object instance has been disposed.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.CreateNewPin(System.String,System.String,System.String)">
      <summary>
            Create a new pin for the user.
            </summary>
      <param name="username">Name of the user.</param>
      <param name="token">Current token of the user.</param>
      <param name="pin">New pin of the user.</param>
      <returns>True if a new pin is created for the user successfully; otherwise False.</returns>
    </member>
    <member name="F:Gemstone.Communication.Radius.RadiusClient.DefaultNewPinModeMessage1">
      <summary>
            Default text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not Step 1 (ensuring that the user account is in
            the "New Pin" mode) of creating a new pin was successful.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.RadiusClient.DefaultNewPinModeMessage2">
      <summary>
            Default text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not Step 2 (new pin is accepted in attempt #1)
             of creating a new pin was successful.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.RadiusClient.DefaultNewPinModeMessage3">
      <summary>
            Default text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not Step 3 (new pin is accepted in attempts #2)
            of creating a new pin was successful.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.RadiusClient.DefaultNextTokenModeMessage">
      <summary>
            Default text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not a user account is in the "Next Token" mode.
            </summary>
    </member>
    <member name="F:Gemstone.Communication.Radius.RadiusClient.DefaultServerPort">
      <summary>
            Default port of the RADIUS server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.Dispose">
      <summary>
            Releases the used resources.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.Dispose(System.Boolean)">
      <summary>
            Releases the used resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Gemstone.Communication.Radius.RadiusClient</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.IsUserInNewPinMode(Gemstone.Communication.Radius.RadiusPacket)">
      <summary>
            Determines whether or not the response indicates that the user account is in "New Pin" mode.
            </summary>
      <param name="response">Response packet sent by the server.</param>
      <returns>True if the user account is in "New Pin" mode; otherwise False.</returns>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.IsUserInNextTokenMode(Gemstone.Communication.Radius.RadiusPacket)">
      <summary>
            Determines whether or not the response indicates that the user account is in "Next Token" mode.
            </summary>
      <param name="response">Response packet sent by the server.</param>
      <returns>True if the user account is in "Next Token" mode; otherwise False.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.NewPinModeMessage1">
      <summary>
            Gets or sets the text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not Step 1 (ensuring that the user account is in  the
            "New Pin" mode) of creating a new pin was successful.
            </summary>
      <returns>Text for "New Pin" mode's first message.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.NewPinModeMessage2">
      <summary>
            Gets or sets the text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not Step 2 (new pin is accepted in attempt #1) of creating
            a new pin was successful.
            </summary>
      <returns>Text for "New Pin" mode's second message.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.NewPinModeMessage3">
      <summary>
            Gets or sets the text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not Step 3 (new pin is accepted in attempts #2) of creating
            a new pin was successful.
            </summary>
      <returns>Text for "New Pin" mode's third message.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.NextTokenModeMessage">
      <summary>
            Gets or sets the text for comparing with the text of ReplyMessage attribute in an AccessChallenge
            server response to determine whether or not a user account is in the "Next Token" mode.
            </summary>
      <returns>Text for "Next Token" mode.</returns>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusClient.ProcessRequest(Gemstone.Communication.Radius.RadiusPacket)">
      <summary>
            Send a request to the server and waits for a response back.
            </summary>
      <param name="request">Request to be sent to the server.</param>
      <returns>Response packet if a valid response is received from the server; otherwise Nothing.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.ReponseTimeout">
      <summary>
            Gets or sets the time (in milliseconds) to wait for a response from server after sending a request.
            </summary>
      <returns>Time (in milliseconds) to wait for a response from server after sending a request.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.RequestAttempts">
      <summary>
            Gets or sets the number of time a request is to sent to the server until a valid response is received.
            </summary>
      <returns>Number of time a request is to sent to the server until a valid response is received.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.ServerName">
      <summary>
            Gets or sets the name or address of the RADIUS server.
            </summary>
      <returns>Name or address of RADIUS server.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.ServerPort">
      <summary>
            Gets or sets the port number of the RADIUS server.
            </summary>
      <returns>Port number of the RADIUS server.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusClient.SharedSecret">
      <summary>
            Gets or sets the shared secret used between the client and server for encryption and authentication.
            </summary>
      <returns>Shared secret used between the client and server for encryption and authentication.</returns>
    </member>
    <member name="T:Gemstone.Communication.Radius.RadiusPacket">
      <summary>
            Represents a data packet transferred between RADIUS client and server.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.#ctor(Gemstone.Communication.Radius.PacketType)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" /> class.
            </summary>
      <param name="type">Type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" />.</param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" /> class.
            </summary>
      <param name="binaryImage">Binary image to be used for initializing <see cref="T:Gemstone.Communication.Radius.RadiusPacket" />.</param>
      <param name="startIndex">0-based starting index of initialization data in the <paramref name="binaryImage" />.</param>
      <param name="length">Valid number of bytes in <paramref name="binaryImage" /> from <paramref name="startIndex" />.</param>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacket.Attributes">
      <summary>
            Gets a list of <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />s.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacket.Authenticator">
      <summary>
            Gets or sets the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" /> authenticator.
            </summary>
      <exception cref="T:System.ArgumentNullException">The value being assigned is null.</exception>
      <exception cref="T:System.ArgumentException">The value being assigned is not 16-bytes in length.</exception>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacket.BinaryLength">
      <summary>
            Gets the length of the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.CreateRequestAuthenticator(System.String)">
      <summary>
            Generates an "Authenticator" value used in a RADIUS request packet sent by the client to server.
            </summary>
      <param name="sharedSecret">The shared secret to be used in generating the output.</param>
      <returns>A byte array.</returns>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.CreateResponseAuthenticator(System.String,Gemstone.Communication.Radius.RadiusPacket,Gemstone.Communication.Radius.RadiusPacket)">
      <summary>
            Generates an "Authenticator" value used in a RADIUS response packet sent by the server to client.
            </summary>
      <param name="sharedSecret">The shared secret key.</param>
      <param name="requestPacket">RADIUS packet sent from client to server.</param>
      <param name="responsePacket">RADIUS packet sent from server to client.</param>
      <returns>A byte array.</returns>
    </member>
    <member name="F:Gemstone.Communication.Radius.RadiusPacket.Encoding">
      <summary>
        <see cref="F:Gemstone.Communication.Radius.RadiusPacket.Encoding" /> format for encoding text.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.EncryptPassword(System.String,System.String,System.Byte[])">
      <summary>
            Generates an encrypted password using the RADIUS protocol specification (RFC 2285).
            </summary>
      <param name="password">User's password.</param>
      <param name="sharedSecret">Shared secret key.</param>
      <param name="requestAuthenticator">Request authenticator byte array.</param>
      <returns>A byte array.</returns>
    </member>
    <member name="F:Gemstone.Communication.Radius.RadiusPacket.EndianOrder">
      <summary>
        <see cref="F:Gemstone.Communication.Radius.RadiusPacket.EndianOrder" /> to use for byte conversion.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.GenerateBinaryImage(System.Byte[],System.Int32)">
      <summary>
            Generates a binary representation of this <see cref="T:Gemstone.Communication.Radius.RadiusPacket" /> object and copies it into the given buffer.
            </summary>
      <param name="buffer">Buffer used to hold generated binary image of the source object.</param>
      <param name="startIndex">0-based starting index in the <paramref name="buffer" /> to start writing.</param>
      <returns>The number of bytes written to the <paramref name="buffer" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <see cref="P:Gemstone.IO.Parsing.ISupportBinaryImage.BinaryLength" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <see cref="P:Gemstone.IO.Parsing.ISupportBinaryImage.BinaryLength" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.GetAttributeValue(Gemstone.Communication.Radius.AttributeType)">
      <summary>
            Gets the value of the specified <paramref name="attributeType" /> if it is present in the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" />.
            </summary>
      <param name="attributeType">
        <see cref="P:Gemstone.Communication.Radius.RadiusPacketAttribute.Type" /> of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> whose value is to be retrieved.</param>
      <returns>
        <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.<see cref="P:Gemstone.Communication.Radius.RadiusPacketAttribute.Value" /> if <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> is present; otherwise null.</returns>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacket.Identifier">
      <summary>
            Gets or sets the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" /> identifier.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacket.ParseBinaryImage(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Parses <see cref="T:Gemstone.Communication.Radius.RadiusPacket" /> object by parsing the specified <paramref name="buffer" /> containing a binary image.
            </summary>
      <param name="buffer">Buffer containing binary image to parse.</param>
      <param name="startIndex">0-based starting index in the <paramref name="buffer" /> to start parsing.</param>
      <param name="length">Valid number of bytes within <paramref name="buffer" /> from <paramref name="startIndex" />.</param>
      <returns>The number of bytes used for initialization in the <paramref name="buffer" /> (i.e., the number of bytes parsed), or 0 if not enough data.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacket.Type">
      <summary>
            Gets or sets the type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacket" />.
            </summary>
    </member>
    <member name="T:Gemstone.Communication.Radius.RadiusPacketAttribute">
      <summary>
            Represents an attribute of <see cref="T:Gemstone.Communication.Radius.RadiusPacket" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> class.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.#ctor(Gemstone.Communication.Radius.AttributeType,System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> class.
            </summary>
      <param name="type">Type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
      <param name="value">Byte array value of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.#ctor(Gemstone.Communication.Radius.AttributeType,System.Net.IPAddress)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> class.
            </summary>
      <param name="type">Type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
      <param name="value">IP address value of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.#ctor(Gemstone.Communication.Radius.AttributeType,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> class.
            </summary>
      <param name="type">Type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
      <param name="value">Text value of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.#ctor(Gemstone.Communication.Radius.AttributeType,System.UInt32)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> class.
            </summary>
      <param name="type">Type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
      <param name="value">32-bit unsigned integer value of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> class.
            </summary>
      <param name="buffer">Buffer containing binary image to be used for initializing <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.</param>
      <param name="startIndex">0-based starting index of initialization data in the <paramref name="buffer" />.</param>
      <param name="length">Valid number of bytes in <paramref name="buffer" /> from <paramref name="startIndex" />.</param>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacketAttribute.BinaryLength">
      <summary>
            Gets the length of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.
            </summary>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.GenerateBinaryImage(System.Byte[],System.Int32)">
      <summary>
            Generates a binary representation of this <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> object and copies it into the given buffer.
            </summary>
      <param name="buffer">Buffer used to hold generated binary image of the source object.</param>
      <param name="startIndex">0-based starting index in the <paramref name="buffer" /> to start writing.</param>
      <returns>The number of bytes written to the <paramref name="buffer" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> or <see cref="P:Gemstone.IO.Parsing.ISupportBinaryImage.BinaryLength" /> is less than 0 -or- 
            <paramref name="startIndex" /> and <see cref="P:Gemstone.IO.Parsing.ISupportBinaryImage.BinaryLength" /> will exceed <paramref name="buffer" /> length.
            </exception>
    </member>
    <member name="M:Gemstone.Communication.Radius.RadiusPacketAttribute.ParseBinaryImage(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Parses <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" /> object by parsing the specified <paramref name="buffer" /> containing a binary image.
            </summary>
      <param name="buffer">Buffer containing binary image to parse.</param>
      <param name="startIndex">0-based starting index in the <paramref name="buffer" /> to start parsing.</param>
      <param name="length">Valid number of bytes within <paramref name="buffer" /> from <paramref name="startIndex" />.</param>
      <returns>The number of bytes used for initialization in the <paramref name="buffer" /> (i.e., the number of bytes parsed), or 0 if not enough data.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null.</exception>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacketAttribute.Type">
      <summary>
            Gets or sets the type of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.
            </summary>
    </member>
    <member name="P:Gemstone.Communication.Radius.RadiusPacketAttribute.Value">
      <summary>
            Gets or sets the value of the <see cref="T:Gemstone.Communication.Radius.RadiusPacketAttribute" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">The value being assigned is null or zero-length byte array.</exception>
    </member>
  </members>
</doc>